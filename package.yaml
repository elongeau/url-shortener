name: url-shortener
version: 0.1.0.0

dependencies:
  - base >= 4.14 && < 5
  - text
  - mtl
  - aeson
  - deriving-aeson
  - servant
  - servant-server
  - wai
  - warp
  - either
  - time
  - unliftio
  - resource-pool
  - bytestring
  - mr-env
  - mongoDB
  - time

library:
  source-dirs: src

executables:
  url-shortener:
    main: Main.hs
    source-dirs: app
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - url-shortener

tests:
  spec:
    main: Spec.hs
    source-dirs: test
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - url-shortener
      - hspec
      - hedgehog
      - http-types
      - wai-extra
      - hspec-wai
      - hspec-wai-json
      - servant-client
      - http-client
      - utf8-string
      - containers

ghc-options:
  - -Weverything
  - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures.
  - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
  - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function.
  - -Wno-all-missed-specialisations # See missed-specialisations
  - -Wno-unsafe # Don’t use Safe Haskell warnings
  - -Wno-safe # Don’t use Safe Haskell warnings
  - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
  - -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
  - -Wno-missing-export-lists # Don't warn if export list is missing
  - -Wno-missing-home-modules # Don't warn in GHCi when loading modules (this is a bogus warning)
  - -Wno-missing-safe-haskell-mode
  - -Wno-prepositive-qualified-module
  - -Wno-unused-packages
  - -Wno-implicit-prelude
  - -O2
  - -flate-specialise
  - -fspecialise-aggressively

default-extensions:
  - DataKinds
  - FlexibleContexts
  - GADTs
  - LambdaCase
  - PolyKinds
  - RankNTypes
  - ScopedTypeVariables
  - TypeApplications
  - TypeOperators
  - TypeFamilies
  - TemplateHaskell
  - MultiParamTypeClasses

  # Deriving extensions
  - GeneralizedNewtypeDeriving
  - DeriveGeneric
  - DerivingStrategies

  # Misc extensions
  - OverloadedStrings
  - RecordWildCards
  - StrictData
  - PatternSynonyms
  - BlockArguments
